import json
from pathlib import Path
import sys


def update_cpptest_output_file(filename: Path, working_dir: Path) -> None:
    """
    Updates the file paths in a JSON file generated by Cpptest to use the expected
    absolute paths based on the provided working directory.
    Positional args:
        filename (str) -  The path to the JSON file containing Cpptest output data.
        working_dir (str): The working directory to which the file paths
                           should be updated.
    Raises:
        ValueError - If the JSON file cannot be loaded or saved due to invalid format or
                    file access issues.
    Returns:
        None - The function modifies the JSON file in place, updating the file paths.
    """

    # Load the JSON data from the file
    with open(filename, 'r') as file:
        data = json.load(file)

    for item in data['data']:
        if 'location' in item:
            location = item['location']
            if 'file' in location:
                file_path = Path(location['file'])
                try:
                    # Find the relative path starting from the "data" folder
                    relative_path = file_path.relative_to(
                        *file_path.parts[:file_path.parts.index("data") + 1])
                    # Update the file path with the expected location
                    location['file'] = (str(Path(working_dir) /
                                             relative_path).replace("\\", "/"))
                except ValueError:
                    print(f"Error: 'data' folder not found in path {file_path}")

    # Save the updated JSON data back to the same file
    with open(filename, 'w') as fd:
        json.dump(data, fd, indent=2)
        fd.write("\n")

    print(f"Cpptest JSON data updated and saved back to '{filename}'.")


if __name__ == "__main__":
    update_cpptest_output_file(sys.argv[1])
