#!/usr/bin/env python3
#
# lobster_ci_report - Write LOBSTER issued on the command-line
# Copyright (C) 2022 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License along with this program. If not, see
# <https://www.gnu.org/licenses/>.

import sys
import os.path
import argparse
import html
import subprocess
import hashlib
import tempfile

from lobster.report import errors, assets, report

def main():
    ap = argparse.ArgumentParser()
    ap.add_argument("lobster_report",
                    nargs="?",
                    default="report.lobster")
    options = ap.parse_args()

    mh = errors.Message_Handler()

    if not os.path.isfile(options.lobster_report):
        if options.lobster_report == "report.lobster":
            ap.error("specify report file")
        else:
            ap.error("%s is not a file" % options.lobster_report)

    try:
        data = report.load(mh, options.lobster_report)
    except errors.LOBSTER_Error:
        return 1

    ok = True
    for level in data["levels"]:
        for item in level["items"]:
            if item["tracing_status"] in ("OK", "JUSTIFIED"):
                continue

            ok = False

            base = ""
            if item["source"]["ref"] == "file":
                if item["source"]["precise"]:
                    base = "%s:%u: " % (item["source"]["file"],
                                        item["source"]["line"])
                else:
                    base = "%s: " % item["source"]["file"]
            else:
                assert False

            base += "tracing error on %s: " % item["name"]

            for message in item["tracing_messages"]:
                print(base + message)

    return 0 if ok else 1

if __name__ == "__main__":
    sys.exit(main())
