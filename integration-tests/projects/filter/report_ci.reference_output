{
  "schema": "lobster-report",
  "version": 2,
  "generator": "lobster_report",
  "levels": [
    {
      "name": "System Requirements",
      "kind": "requirements",
      "items": [
        {
          "tag": "req sysreq_example.lobster_example",
          "location": {
            "kind": "github",
            "gh_root": "https://github.com/bmw-software-engineering/lobster",
            "commit": "main",
            "file": "integration-tests/projects/filter/sysreq_example.trlc",
            "line": 4
          },
          "name": "sysreq_example.lobster_example",
          "messages": [],
          "just_up": [],
          "just_down": [],
          "just_global": [],
          "ref_up": [],
          "ref_down": [
            "req softreq_example.req_implication",
            "req softreq_example.req_xor"
          ],
          "tracing_status": "OK",
          "framework": "TRLC",
          "kind": "System_Requirement",
          "text": "Provide a demonstration of LOBSTER with system and software requirements in TRLC with a source filter in lobster.conf",
          "status": null
        },
        {
          "tag": "req sysreq_example.req_implication",
          "location": {
            "kind": "github",
            "gh_root": "https://github.com/bmw-software-engineering/lobster",
            "commit": "main",
            "file": "integration-tests/projects/filter/sysreq_example.trlc",
            "line": 11
          },
          "name": "sysreq_example.req_implication",
          "messages": [],
          "just_up": [],
          "just_down": [],
          "just_global": [],
          "ref_up": [],
          "ref_down": [
            "req softreq_example.req_implication"
          ],
          "tracing_status": "OK",
          "framework": "TRLC",
          "kind": "System_Requirement",
          "text": "The example shall provide a logical implication operation between two integer inputs \nto determine if the second integer is logically implied by the first.",
          "status": null
        },
        {
          "tag": "req sysreq_example.req_xor",
          "location": {
            "kind": "github",
            "gh_root": "https://github.com/bmw-software-engineering/lobster",
            "commit": "main",
            "file": "integration-tests/projects/filter/sysreq_example.trlc",
            "line": 19
          },
          "name": "sysreq_example.req_xor",
          "messages": [],
          "just_up": [],
          "just_down": [],
          "just_global": [],
          "ref_up": [],
          "ref_down": [
            "req softreq_example.req_xor"
          ],
          "tracing_status": "OK",
          "framework": "TRLC",
          "kind": "System_Requirement",
          "text": "The example shall provide an exclusive or (XOR) operation between two integer inputs \nto evaluate scenarios where a decision is based on the condition that exactly one of two inputs must be true (non-zero).",
          "status": null
        }
      ],
      "coverage": 100.0
    },
    {
      "name": "Software Requirements",
      "kind": "requirements",
      "items": [
        {
          "tag": "req softreq_example.req_implication",
          "location": {
            "kind": "github",
            "gh_root": "https://github.com/bmw-software-engineering/lobster",
            "commit": "main",
            "file": "integration-tests/projects/filter/softreq_example.trlc",
            "line": 5
          },
          "name": "softreq_example.req_implication",
          "messages": [],
          "just_up": [],
          "just_down": [],
          "just_global": [],
          "ref_up": [
            "req sysreq_example.req_implication",
            "req sysreq_example.lobster_example"
          ],
          "ref_down": [
            "json test_example.json:Implication Test 1",
            "json test_example.json:Implication Test 2"
          ],
          "tracing_status": "OK",
          "framework": "TRLC",
          "kind": "Software_Requirement",
          "text": "Implement a function with the signature \n   int implication(int x, int y)\nthat computes the logical implication of its two integer arguments.\nThe function returns 1 (true) if the first argument is 0\nor the second argument is non-zero, and 0 (false) otherwise.",
          "status": null
        },
        {
          "tag": "req softreq_example.req_xor",
          "location": {
            "kind": "github",
            "gh_root": "https://github.com/bmw-software-engineering/lobster",
            "commit": "main",
            "file": "integration-tests/projects/filter/softreq_example.trlc",
            "line": 17
          },
          "name": "softreq_example.req_xor",
          "messages": [],
          "just_up": [],
          "just_down": [],
          "just_global": [],
          "ref_up": [
            "req sysreq_example.req_xor",
            "req sysreq_example.lobster_example"
          ],
          "ref_down": [
            "json test_example.json:XOR Test 1",
            "json test_example.json:XOR Test 2",
            "json test_example.json:XOR Test 3",
            "json test_example.json:XOR Test 4"
          ],
          "tracing_status": "OK",
          "framework": "TRLC",
          "kind": "Software_Requirement",
          "text": "Implement a function with the signature \n   int exclusive_or(int x, int y)\nto compute the exclusive or (XOR) of its two integer arguments.\nThe function returns 1 when exactly one of the arguments is non-zero and 0 otherwise.",
          "status": null
        }
      ],
      "coverage": 100.0
    },
    {
      "name": "Verification Test",
      "kind": "activity",
      "items": [
        {
          "tag": "json test_example.json:Implication Test 1",
          "location": {
            "kind": "github",
            "gh_root": "https://github.com/bmw-software-engineering/lobster",
            "commit": "main",
            "file": "integration-tests/projects/filter/test_example.json",
            "line": null
          },
          "name": "test_example.json:Implication Test 1",
          "messages": [],
          "just_up": [],
          "just_down": [],
          "just_global": [],
          "ref_up": [
            "req softreq_example.req_implication"
          ],
          "ref_down": [],
          "tracing_status": "OK",
          "framework": "JSON",
          "kind": "Test Vector",
          "status": null
        },
        {
          "tag": "json test_example.json:Implication Test 2",
          "location": {
            "kind": "github",
            "gh_root": "https://github.com/bmw-software-engineering/lobster",
            "commit": "main",
            "file": "integration-tests/projects/filter/test_example.json",
            "line": null
          },
          "name": "test_example.json:Implication Test 2",
          "messages": [],
          "just_up": [],
          "just_down": [],
          "just_global": [],
          "ref_up": [
            "req softreq_example.req_implication"
          ],
          "ref_down": [],
          "tracing_status": "OK",
          "framework": "JSON",
          "kind": "Test Vector",
          "status": null
        },
        {
          "tag": "json test_example.json:XOR Test 1",
          "location": {
            "kind": "github",
            "gh_root": "https://github.com/bmw-software-engineering/lobster",
            "commit": "main",
            "file": "integration-tests/projects/filter/test_example.json",
            "line": null
          },
          "name": "test_example.json:XOR Test 1",
          "messages": [],
          "just_up": [],
          "just_down": [],
          "just_global": [],
          "ref_up": [
            "req softreq_example.req_xor"
          ],
          "ref_down": [],
          "tracing_status": "OK",
          "framework": "JSON",
          "kind": "Test Vector",
          "status": null
        },
        {
          "tag": "json test_example.json:XOR Test 2",
          "location": {
            "kind": "github",
            "gh_root": "https://github.com/bmw-software-engineering/lobster",
            "commit": "main",
            "file": "integration-tests/projects/filter/test_example.json",
            "line": null
          },
          "name": "test_example.json:XOR Test 2",
          "messages": [],
          "just_up": [],
          "just_down": [],
          "just_global": [],
          "ref_up": [
            "req softreq_example.req_xor"
          ],
          "ref_down": [],
          "tracing_status": "OK",
          "framework": "JSON",
          "kind": "Test Vector",
          "status": null
        },
        {
          "tag": "json test_example.json:XOR Test 3",
          "location": {
            "kind": "github",
            "gh_root": "https://github.com/bmw-software-engineering/lobster",
            "commit": "main",
            "file": "integration-tests/projects/filter/test_example.json",
            "line": null
          },
          "name": "test_example.json:XOR Test 3",
          "messages": [],
          "just_up": [],
          "just_down": [],
          "just_global": [],
          "ref_up": [
            "req softreq_example.req_xor"
          ],
          "ref_down": [],
          "tracing_status": "OK",
          "framework": "JSON",
          "kind": "Test Vector",
          "status": null
        },
        {
          "tag": "json test_example.json:XOR Test 4",
          "location": {
            "kind": "github",
            "gh_root": "https://github.com/bmw-software-engineering/lobster",
            "commit": "main",
            "file": "integration-tests/projects/filter/test_example.json",
            "line": null
          },
          "name": "test_example.json:XOR Test 4",
          "messages": [],
          "just_up": [],
          "just_down": [],
          "just_global": [],
          "ref_up": [
            "req softreq_example.req_xor"
          ],
          "ref_down": [],
          "tracing_status": "OK",
          "framework": "JSON",
          "kind": "Test Vector",
          "status": null
        }
      ],
      "coverage": 100.0
    }
  ],
  "policy": {
    "System Requirements": {
      "name": "System Requirements",
      "kind": "requirements",
      "traces": [],
      "source": [
        {
          "file": "requirements.lobster",
          "filters": [
            [
              "kind",
              "System_Requirement"
            ]
          ],
          "valid_status": []
        }
      ],
      "needs_tracing_up": false,
      "needs_tracing_down": true,
      "breakdown_requirements": [
        [
          "Software Requirements"
        ]
      ]
    },
    "Software Requirements": {
      "name": "Software Requirements",
      "kind": "requirements",
      "traces": [
        "System Requirements"
      ],
      "source": [
        {
          "file": "requirements.lobster",
          "filters": [
            [
              "kind",
              "Software_Requirement"
            ]
          ],
          "valid_status": []
        }
      ],
      "needs_tracing_up": true,
      "needs_tracing_down": true,
      "breakdown_requirements": [
        [
          "Verification Test"
        ]
      ]
    },
    "Verification Test": {
      "name": "Verification Test",
      "kind": "activity",
      "traces": [
        "Software Requirements"
      ],
      "source": [
        {
          "file": "json.lobster",
          "filters": []
        }
      ],
      "needs_tracing_up": true,
      "needs_tracing_down": false,
      "breakdown_requirements": []
    }
  },
  "matrix": []
}